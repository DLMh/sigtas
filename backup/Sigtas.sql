-- DIVISION definition

-- DDL generated by DBeaver
-- WARNING: It may differ from actual native database DDL

-- Drop table

-- DROP TABLE DIVISION;

CREATE TABLE DIVISION (
	DIVISION_NO NUMBER(3,0),
	DIVISION_DESC VARCHAR2(50),
	DIVISION_DESC_F VARCHAR2(50),
	DIVISION_DESC_S VARCHAR2(50),
	CONSTRAINT DIVISION_DESC_F_UK UNIQUE (DIVISION_DESC_F),
	CONSTRAINT DIVISION_DESC_S_UK UNIQUE (DIVISION_DESC_S),
	CONSTRAINT DIVISION_DESC_UK UNIQUE (DIVISION_DESC),
	CONSTRAINT DIVISION_PK PRIMARY KEY (DIVISION_NO),
	CONSTRAINT SYS_C006578 CHECK ("DIVISION_NO" IS NOT NULL),
	CONSTRAINT SYS_C006579 CHECK ("DIVISION_DESC" IS NOT NULL)
);
CREATE UNIQUE INDEX DIVISION_DESC_F_UK ON DIVISION (DIVISION_DESC_F);
CREATE UNIQUE INDEX DIVISION_DESC_S_UK ON DIVISION (DIVISION_DESC_S);
CREATE UNIQUE INDEX DIVISION_DESC_UK ON DIVISION (DIVISION_DESC);
CREATE UNIQUE INDEX DIVISION_PK ON DIVISION (DIVISION_NO);


-- DOC_COURRIER definition

-- DDL generated by DBeaver
-- WARNING: It may differ from actual native database DDL

-- Drop table

-- DROP TABLE DOC_COURRIER;

CREATE TABLE DOC_COURRIER (
	DOC_NO NUMBER(10,0),
	NUMERO NUMBER(5,0),
	TYPE_COURRIER VARCHAR2(1),
	YEAR_COURR NUMBER(4,0),
	DIVISION_NO NUMBER(3,0),
	DOC_COURRIER_OBJECT_NO NUMBER(3,0),
	DOC_COURRIER_TITRE_NO NUMBER(3,0),
	CONSTRAINT SYS_C006593 CHECK ("DOC_NO" IS NOT NULL),
	CONSTRAINT SYS_C006594 CHECK ("NUMERO" IS NOT NULL),
	CONSTRAINT SYS_C006595 CHECK ("YEAR_COURR" IS NOT NULL)
);


-- DOC_COURRIER_ACTION definition

-- DDL generated by DBeaver
-- WARNING: It may differ from actual native database DDL

-- Drop table

-- DROP TABLE DOC_COURRIER_ACTION;

CREATE TABLE DOC_COURRIER_ACTION (
	DOC_COURRIER_ACTION_NO VARCHAR2(1),
	DOC_COURRIER_LIBELLE VARCHAR2(255),
	CONSTRAINT SYS_C00208922 CHECK ("DOC_COURRIER_ACTION_NO" IS NOT NULL)
);


-- DOC_COURRIER_DETAILS definition

-- DDL generated by DBeaver
-- WARNING: It may differ from actual native database DDL

-- Drop table

-- DROP TABLE DOC_COURRIER_DETAILS;

CREATE TABLE DOC_COURRIER_DETAILS (
	NUMERO NUMBER(5,0),
	YEAR_COURR NUMBER(4,0),
	DATE_DETAILS DATE,
	DOC_COURRIER_ACTION_NO VARCHAR2(1),
	DOC_NOMBRE NUMBER(3,0),
	IRD_LOGIN_ID VARCHAR2(10),
	DOC_ENTREE DATE DEFAULT sysdate,
	CONSTRAINT SYS_C00208858 CHECK ("NUMERO" IS NOT NULL),
	CONSTRAINT SYS_C00208859 CHECK ("YEAR_COURR" IS NOT NULL)
);


-- DOC_COURRIER_OBJECT definition

-- DDL generated by DBeaver
-- WARNING: It may differ from actual native database DDL

-- Drop table

-- DROP TABLE DOC_COURRIER_OBJECT;

CREATE TABLE DOC_COURRIER_OBJECT (
	DOC_COURRIER_OBJECT_NO NUMBER,
	DOC_COURRIER_OBJECT VARCHAR2(250)
);


-- DOC_COURRIER_TITRE definition

-- DDL generated by DBeaver
-- WARNING: It may differ from actual native database DDL

-- Drop table

-- DROP TABLE DOC_COURRIER_TITRE;

CREATE TABLE DOC_COURRIER_TITRE (
	DOC_COURRIER_TITRE_NO NUMBER(3,0),
	DOC_COURRIER_TITRE VARCHAR2(255),
	CONSTRAINT SYS_C00168824 CHECK ("DOC_COURRIER_TITRE_NO" IS NOT NULL)
);


-- FISCAL_REGIME definition

-- DDL generated by DBeaver
-- WARNING: It may differ from actual native database DDL

-- Drop table

-- DROP TABLE FISCAL_REGIME;

CREATE TABLE FISCAL_REGIME (
	FISCAL_REGIME_NO NUMBER(2,0),
	FISCAL_REGIME_DESC VARCHAR2(30),
	FISCAL_REGIME_DESC_F VARCHAR2(30),
	FISCAL_REGIME_DESC_S VARCHAR2(30),
	CONSTRAINT FISCREG_DESC_F_UK UNIQUE (FISCAL_REGIME_DESC_F),
	CONSTRAINT FISCREG_DESC_S_UK UNIQUE (FISCAL_REGIME_DESC_S),
	CONSTRAINT FISCREG_DESC_UK UNIQUE (FISCAL_REGIME_DESC),
	CONSTRAINT FISCREG_PK PRIMARY KEY (FISCAL_REGIME_NO),
	CONSTRAINT SYS_C006824 CHECK ("FISCAL_REGIME_NO" IS NOT NULL),
	CONSTRAINT SYS_C006825 CHECK ("FISCAL_REGIME_DESC" IS NOT NULL)
);
CREATE UNIQUE INDEX FISCREG_DESC_F_UK ON FISCAL_REGIME (FISCAL_REGIME_DESC_F);
CREATE UNIQUE INDEX FISCREG_DESC_S_UK ON FISCAL_REGIME (FISCAL_REGIME_DESC_S);
CREATE UNIQUE INDEX FISCREG_DESC_UK ON FISCAL_REGIME (FISCAL_REGIME_DESC);
CREATE UNIQUE INDEX FISCREG_PK ON FISCAL_REGIME (FISCAL_REGIME_NO);


-- INACTIVE_TYPE definition

-- DDL generated by DBeaver
-- WARNING: It may differ from actual native database DDL

-- Drop table

-- DROP TABLE INACTIVE_TYPE;

CREATE TABLE INACTIVE_TYPE (
	INACT_TYPE_NO NUMBER(3,0),
	INACT_TYPE_DESC VARCHAR2(20),
	INACT_TYPE_DESC_F VARCHAR2(20),
	INACT_TYPE_DESC_S VARCHAR2(20),
	CONSTRAINT INACT_TYP_INACT_TYP3_UK UNIQUE (INACT_TYPE_DESC_F),
	CONSTRAINT INACT_TYP_INACT_TYP4_UK UNIQUE (INACT_TYPE_DESC_S),
	CONSTRAINT INACT_TYP_PK PRIMARY KEY (INACT_TYPE_NO),
	CONSTRAINT INACT_TYP_UK UNIQUE (INACT_TYPE_DESC),
	CONSTRAINT SYS_C006915 CHECK ("INACT_TYPE_NO" IS NOT NULL),
	CONSTRAINT SYS_C006916 CHECK ("INACT_TYPE_DESC" IS NOT NULL)
);
CREATE UNIQUE INDEX INACT_TYP_INACT_TYP3_UK ON INACTIVE_TYPE (INACT_TYPE_DESC_F);
CREATE UNIQUE INDEX INACT_TYP_INACT_TYP4_UK ON INACTIVE_TYPE (INACT_TYPE_DESC_S);
CREATE UNIQUE INDEX INACT_TYP_PK ON INACTIVE_TYPE (INACT_TYPE_NO);
CREATE UNIQUE INDEX INACT_TYP_UK ON INACTIVE_TYPE (INACT_TYPE_DESC);


-- INSTALL_RATE definition

-- DDL generated by DBeaver
-- WARNING: It may differ from actual native database DDL

-- Drop table

-- DROP TABLE INSTALL_RATE;

CREATE TABLE INSTALL_RATE (
	INSTALL_RATE_NO NUMBER(6,0),
	LETTER_NO NUMBER(3,0),
	INST_MONTH_NO NUMBER(2,0),
	INST_RATE NUMBER(7,4),
	INST_DUE_DATE_INTERVAL NUMBER(3,0),
	INST_EFFECT_DATE DATE,
	INST_TERM_DATE DATE,
	INST_DATE NUMBER(4,0),
	DAYS_GRACE NUMBER(3,0),
	TPER_INTERVAL_TYPE_NO NUMBER(10,0),
	CONSTRAINT INT_RATE_PK PRIMARY KEY (INSTALL_RATE_NO),
	CONSTRAINT SYS_C006954 CHECK ("INSTALL_RATE_NO" IS NOT NULL),
	CONSTRAINT SYS_C006955 CHECK ("LETTER_NO" IS NOT NULL),
	CONSTRAINT SYS_C006956 CHECK ("INST_MONTH_NO" IS NOT NULL),
	CONSTRAINT SYS_C006957 CHECK ("INST_RATE" IS NOT NULL)
);
CREATE INDEX INT_RATE_LETT_FK_I ON INSTALL_RATE (LETTER_NO);
CREATE UNIQUE INDEX INT_RATE_PK ON INSTALL_RATE (INSTALL_RATE_NO);


-- SECTOR_ACTIVITY definition

-- DDL generated by DBeaver
-- WARNING: It may differ from actual native database DDL

-- Drop table

-- DROP TABLE SECTOR_ACTIVITY;

CREATE TABLE SECTOR_ACTIVITY (
	SECTOR_ACT_NO NUMBER(3,0),
	SECTOR_ACT_DESC VARCHAR2(65),
	SECTOR_ACT_DESC_F VARCHAR2(65),
	SECTOR_ACT_DESC_S VARCHAR2(65),
	CONSTRAINT SYS_C007759 CHECK ("SECTOR_ACT_NO" IS NOT NULL),
	CONSTRAINT SYS_C007760 CHECK ("SECTOR_ACT_DESC" IS NOT NULL),
	CONSTRAINT SYS_C007761 CHECK ("SECTOR_ACT_DESC_F" IS NOT NULL),
	CONSTRAINT SYS_C007762 CHECK ("SECTOR_ACT_DESC_S" IS NOT NULL),
	CONSTRAINT S_ACTIVITY2_UK UNIQUE (SECTOR_ACT_DESC),
	CONSTRAINT S_ACTIVITY3_UK UNIQUE (SECTOR_ACT_DESC_F),
	CONSTRAINT S_ACTIVITY4_UK UNIQUE (SECTOR_ACT_DESC_S),
	CONSTRAINT S_ACTIVITY_PK PRIMARY KEY (SECTOR_ACT_NO)
);
CREATE UNIQUE INDEX S_ACTIVITY2_UK ON SECTOR_ACTIVITY (SECTOR_ACT_DESC);
CREATE UNIQUE INDEX S_ACTIVITY3_UK ON SECTOR_ACTIVITY (SECTOR_ACT_DESC_F);
CREATE UNIQUE INDEX S_ACTIVITY4_UK ON SECTOR_ACTIVITY (SECTOR_ACT_DESC_S);
CREATE UNIQUE INDEX S_ACTIVITY_PK ON SECTOR_ACTIVITY (SECTOR_ACT_NO);


-- TAX_PERIOD definition

-- DDL generated by DBeaver
-- WARNING: It may differ from actual native database DDL

-- Drop table

-- DROP TABLE TAX_PERIOD;

CREATE TABLE TAX_PERIOD (
	TAX_PERIOD_NO NUMBER(6,0),
	VERSION_NO NUMBER(3,0),
	FORM_NO NUMBER(3,0),
	TPER_TYPE_NO NUMBER(2,0),
	TPER_YEAR NUMBER(4,0),
	TPER_MONTH NUMBER(2,0),
	TPER_START_DATE DATE,
	TPER_END_DATE DATE,
	TPER_DUE_DATE DATE,
	TPER_DUE_DATE_INTERVAL NUMBER(3,0),
	INST_PEN_INT_FLAG VARCHAR2(1),
	TP_DATE_BASE_NO NUMBER(2,0),
	IMPOSITION_BASE_NO NUMBER(2,0),
	TPER_ASSESS_DAYS NUMBER(3,0),
	TPER_PAYMENT_DATE DATE,
	TPER_DUE_DATE_INTERVAL_PAY NUMBER(3,0),
	TPER_START_DATE_OTHER VARCHAR2(15),
	TPER_END_DATE_OTHER VARCHAR2(15),
	TPER_DUE_DATE_OTHER VARCHAR2(15),
	TPER_PAYMENT_DATE_OTHER VARCHAR2(15),
	TPER_MONTH_OTHER CHAR(2),
	TPER_YEAR_OTHER CHAR(4),
	TPER_WEEK NUMBER(2,0),
	TPER_DUE_DATE_INTERVAL_TYPE_NO NUMBER(10,0),
	TPER_PAY_DATE_INTERVAL_TYPE_NO NUMBER(10,0),
	INST_TRANSFER_TO_YEAR NUMBER(4,0),
	CONSTRAINT SYS_C008010 CHECK ("TAX_PERIOD_NO" IS NOT NULL),
	CONSTRAINT SYS_C008011 CHECK ("VERSION_NO" IS NOT NULL),
	CONSTRAINT SYS_C008012 CHECK ("FORM_NO" IS NOT NULL),
	CONSTRAINT SYS_C008013 CHECK ("TPER_TYPE_NO" IS NOT NULL),
	CONSTRAINT SYS_C008014 CHECK ("TPER_YEAR" IS NOT NULL),
	CONSTRAINT TX_PERIOD_PK PRIMARY KEY (TAX_PERIOD_NO)
);
CREATE INDEX TX_PERIOD_FORM_VER_FK_I ON TAX_PERIOD (VERSION_NO,FORM_NO);
CREATE INDEX TX_PERIOD_IMP_BASE_FK_I ON TAX_PERIOD (IMPOSITION_BASE_NO);
CREATE UNIQUE INDEX TX_PERIOD_PK ON TAX_PERIOD (TAX_PERIOD_NO);
CREATE INDEX TX_PERIOD_TPDATEBASE_FK_I ON TAX_PERIOD (TP_DATE_BASE_NO);
CREATE INDEX TX_PERIOD_TX_PRD_TYP_FK_I ON TAX_PERIOD (TPER_TYPE_NO);


-- TAX_TYPE definition

-- DDL generated by DBeaver
-- WARNING: It may differ from actual native database DDL

-- Drop table

-- DROP TABLE TAX_TYPE;

CREATE TABLE TAX_TYPE (
	TAX_TYPE_NO NUMBER(3,0),
	TAX_BASIS_NO NUMBER(2,0),
	TAX_TYPE_DESC VARCHAR2(20),
	TAX_TYPE_DESC_F VARCHAR2(20),
	TAX_TYPE_DESC_S VARCHAR2(20),
	IS_LICENSE VARCHAR2(1),
	BUDGET_TYPE_NO NUMBER(2,0),
	USE_CRITERIA VARCHAR2(1),
	INSTALL_BY_DEF VARCHAR2(1),
	REFUND_BY_DEF VARCHAR2(1),
	ASSESS_NOTICE_ONLY VARCHAR2(1) DEFAULT 'N',
	PRINT_TRADE_NAME VARCHAR2(1),
	CONSOLIDATED VARCHAR2(1) DEFAULT 'N' ,
	IS_VAT NUMBER(1,0) DEFAULT 0 ,
	IS_INSTALMENT NUMBER(1,0) DEFAULT 0 ,
	HAS_INSTALMENT NUMBER(1,0) DEFAULT 0 ,
	IN_STAT_REPORT CHAR(1) DEFAULT 'N' ,
	USE_REVENUE_CODE CHAR(1) DEFAULT 'N' ,
	TAX_ACCT_BY_DEF_FL CHAR(1) DEFAULT 'Y' ,
	DEF_INST_RANGE_NO NUMBER(3,0),
	TAX_TYPE_REFERENCE_NO NUMBER(3,0),
	CONSTRAINT AVCON_1011888606_IS_IN_000 CHECK (IS_INSTALMENT IN (1, 0)),
	CONSTRAINT AVCON_993592880_CONSO_001 CHECK (CONSOLIDATED IN ('Y', 'N')),
	CONSTRAINT SYS_C008058 CHECK ("TAX_TYPE_NO" IS NOT NULL),
	CONSTRAINT SYS_C008059 CHECK ("TAX_BASIS_NO" IS NOT NULL),
	CONSTRAINT SYS_C008060 CHECK ("TAX_TYPE_DESC" IS NOT NULL),
	CONSTRAINT SYS_C008061 CHECK ("BUDGET_TYPE_NO" IS NOT NULL),
	CONSTRAINT SYS_C008062 CHECK ("PRINT_TRADE_NAME" IS NOT NULL),
	CONSTRAINT SYS_C008063 CHECK ("CONSOLIDATED" IS NOT NULL),
	CONSTRAINT SYS_C008064 CHECK ("IS_VAT" IS NOT NULL),
	CONSTRAINT SYS_C008065 CHECK ("IS_INSTALMENT" IS NOT NULL),
	CONSTRAINT SYS_C008066 CHECK ("HAS_INSTALMENT" IS NOT NULL),
	CONSTRAINT SYS_C008067 CHECK ("IN_STAT_REPORT" IS NOT NULL),
	CONSTRAINT SYS_C008068 CHECK ("USE_REVENUE_CODE" IS NOT NULL),
	CONSTRAINT SYS_C008069 CHECK ("TAX_ACCT_BY_DEF_FL" IS NOT NULL),
	CONSTRAINT TAX_TYP_PK PRIMARY KEY (TAX_TYPE_NO),
	CONSTRAINT TAX_TYP_TAX_TYP2_UK UNIQUE (TAX_TYPE_DESC),
	CONSTRAINT TXTYPE_PRINT_TRAD_NAM_CK CHECK (PRINT_TRADE_NAME IN ('Y', 'N')),
	CONSTRAINT TXTYP_IN_STAT_REP_CHK1 CHECK (in_stat_report in ('Y','N'))
);
CREATE INDEX TAX_TYP_BUDGET_TYP_FK_I ON TAX_TYPE (BUDGET_TYPE_NO);
CREATE UNIQUE INDEX TAX_TYP_PK ON TAX_TYPE (TAX_TYPE_NO);
CREATE INDEX TAX_TYP_TAXB_FK_I ON TAX_TYPE (TAX_BASIS_NO);
CREATE UNIQUE INDEX TAX_TYP_TAX_TYP2_UK ON TAX_TYPE (TAX_TYPE_DESC);


-- DOC_TYPE definition

-- DDL generated by DBeaver
-- WARNING: It may differ from actual native database DDL

-- Drop table

-- DROP TABLE DOC_TYPE;

CREATE TABLE DOC_TYPE (
	DOC_TYPE_NO NUMBER(3,0),
	DOC_TYPE_DESC VARCHAR2(100),
	DOC_TYPE_DES2C_F VARCHAR2(100),
	DOC_TYPE_DESC_S VARCHAR2(100),
	VALIDITY_PERIOD_MONTHS NUMBER(3,0),
	TAX_TYPE_NO NUMBER(2,0),
	IS_APPROVAL_DOC_FL CHAR(1) DEFAULT 'N' ,
	IS_IMP_BASE_DOC_FL VARCHAR2(1) DEFAULT 'N' ,
	IS_CERTIF CHAR(1) DEFAULT 'N' ,
	CONSTRAINT DOC_TYPE_UK UNIQUE (DOC_TYPE_DESC),
	CONSTRAINT DOC_TYP_PK PRIMARY KEY (DOC_TYPE_NO),
	CONSTRAINT SYS_C006622 CHECK ("DOC_TYPE_NO" IS NOT NULL),
	CONSTRAINT SYS_C006623 CHECK ("DOC_TYPE_DESC" IS NOT NULL),
	CONSTRAINT SYS_C006624 CHECK ("IS_APPROVAL_DOC_FL" IS NOT NULL),
	CONSTRAINT SYS_C006625 CHECK ("IS_IMP_BASE_DOC_FL" IS NOT NULL),
	CONSTRAINT SYS_C006626 CHECK ("IS_CERTIF" IS NOT NULL),
	CONSTRAINT SYS_C008579 FOREIGN KEY (TAX_TYPE_NO) REFERENCES TAX_TYPE(TAX_TYPE_NO)
);
CREATE UNIQUE INDEX DOC_TYPE_UK ON DOC_TYPE (DOC_TYPE_DESC);
CREATE UNIQUE INDEX DOC_TYP_PK ON DOC_TYPE (DOC_TYPE_NO);


-- IRD_EMPLOYEE definition

-- DDL generated by DBeaver
-- WARNING: It may differ from actual native database DDL

-- Drop table

-- DROP TABLE IRD_EMPLOYEE;

CREATE TABLE IRD_EMPLOYEE (
	IRD_EMPLOYEE_NO NUMBER(3,0),
	IRD_EMP_EMPLOYEE_NO VARCHAR2(10),
	IRD_EMP_FIRST_NAME VARCHAR2(60),
	IRD_EMP_LAST_NAME VARCHAR2(60),
	IRD_LOGIN_ID VARCHAR2(10),
	PAYMENT_LOC_NO NUMBER(2,0),
	LANG_NO NUMBER(2,0),
	TAX_CENTRE_NO NUMBER(3,0),
	"SENSITIVE" CHAR(1),
	UPDATE_ALL_TAX_CENTRES CHAR(1) DEFAULT 'N'  ,
	DIVISION_NO NUMBER(3,0),
	IRD_EMP_PWD VARCHAR2(50),
	CONSTRAINT AVCON_989588931_SENSI_000 CHECK (SENSITIVE IN ('Y', 'N')),
	CONSTRAINT IRD_EMP_NAME_UK UNIQUE (IRD_EMP_FIRST_NAME,IRD_EMP_LAST_NAME),
	CONSTRAINT IRD_EMP_PK PRIMARY KEY (IRD_EMPLOYEE_NO),
	CONSTRAINT IRD_EMP_UK1 UNIQUE (IRD_LOGIN_ID),
	CONSTRAINT IRD_EMP_UK2 UNIQUE (IRD_EMP_EMPLOYEE_NO),
	CONSTRAINT SYS_C007000 CHECK ("IRD_EMPLOYEE_NO" IS NOT NULL),
	CONSTRAINT SYS_C007001 CHECK ("IRD_EMP_EMPLOYEE_NO" IS NOT NULL),
	CONSTRAINT SYS_C007002 CHECK ("IRD_EMP_FIRST_NAME" IS NOT NULL),
	CONSTRAINT SYS_C007003 CHECK ("IRD_EMP_LAST_NAME" IS NOT NULL),
	CONSTRAINT SYS_C007004 CHECK ("TAX_CENTRE_NO" IS NOT NULL),
	CONSTRAINT SYS_C007005 CHECK ("SENSITIVE" IS NOT NULL),
	CONSTRAINT SYS_C007006 CHECK ("UPDATE_ALL_TAX_CENTRES" IS NOT NULL),
	CONSTRAINT IRD_EMP_DIVISION_FK FOREIGN KEY (DIVISION_NO) REFERENCES DIVISION(DIVISION_NO)
);
CREATE INDEX IRD_EMP_DIVISION_FK_I ON IRD_EMPLOYEE (DIVISION_NO);
CREATE INDEX IRD_EMP_LANGUAGE_FK_I ON IRD_EMPLOYEE (LANG_NO);
CREATE UNIQUE INDEX IRD_EMP_NAME_UK ON IRD_EMPLOYEE (IRD_EMP_FIRST_NAME,IRD_EMP_LAST_NAME);
CREATE INDEX IRD_EMP_PAY_LOC_FK_I ON IRD_EMPLOYEE (PAYMENT_LOC_NO);
CREATE UNIQUE INDEX IRD_EMP_PK ON IRD_EMPLOYEE (IRD_EMPLOYEE_NO);
CREATE INDEX IRD_EMP_TAX_CENTRE_FK_I ON IRD_EMPLOYEE (TAX_CENTRE_NO);
CREATE UNIQUE INDEX IRD_EMP_UK1 ON IRD_EMPLOYEE (IRD_LOGIN_ID);
CREATE UNIQUE INDEX IRD_EMP_UK2 ON IRD_EMPLOYEE (IRD_EMP_EMPLOYEE_NO);


-- TAX_PAYER definition

-- DDL generated by DBeaver
-- WARNING: It may differ from actual native database DDL

-- Drop table

-- DROP TABLE TAX_PAYER;

CREATE TABLE TAX_PAYER (
	TAX_PAYER_NO NUMBER(8,0),
	TP_TYPE_NO NUMBER(2,0),
	COUNTRY_NO NUMBER(3,0),
	NSF_CHEQUE CHAR(1) DEFAULT 'N'           ,
	CITY_NO NUMBER(4,0),
	MAILING_ADDRESS VARCHAR2(60),
	RESIDENT CHAR(1) DEFAULT 'Y'           ,
	REP_TAX_PAYER_NO NUMBER(8,0),
	FISC_YR_START NUMBER(4,0),
	FISC_YR_END NUMBER(4,0),
	BRANCH_NO NUMBER(3,0),
	REP_TYPE_NO NUMBER(2,0),
	POST_CODE_NO NUMBER(3,0),
	REP_REASON_NO NUMBER(2,0),
	BANK_ACCT_NO VARCHAR2(25),
	REP_TAXR_NAME VARCHAR2(40),
	ENTER_DATE DATE,
	ENTER_USER NUMBER(3,0),
	FISCAL_NO VARCHAR2(20),
	STREET_NO VARCHAR2(15),
	DOOR_NO VARCHAR2(5),
	LOCALITY_NO NUMBER(5,0),
	ACCOUNT_HOLDER VARCHAR2(50),
	BANK_NO NUMBER(2,0),
	UPDATE_DATE DATE,
	TAX_CENTRE_NO NUMBER(3,0),
	TEMPORARY_TIN VARCHAR2(10),
	TP_STYPE_NO NUMBER(2,0),
	LANG_NO NUMBER(2,0),
	"SENSITIVE" CHAR(1),
	TAXPYR_COMMENT VARCHAR2(200),
	IF_EMAIL_REMITTANCE CHAR(1) DEFAULT 'N'   ,
	UPDATE_USER NUMBER(3,0),
	USE_TIN_AS_VAT_ID CHAR(1),
	WEREDA_NO NUMBER(10,0),
	KEBELE_DESC VARCHAR2(30),
	PO_BOX VARCHAR2(50),
	USE_LOCAL_DATE CHAR(1),
	TIN_FROM_FLAG CHAR(1),
	TIN_SIGTAS_CREATE_DATE DATE,
	TIN_SIGTAS_LAST_UPDATE_DATE DATE,
	TIN_UPDATED_VALUES NUMBER(2,0),
	TIN_VAT_FLAG_REMOVED CHAR(1),
	PREVIOUS_TIN VARCHAR2(20),
	SEND_CORR_TO_REPR CHAR(1),
	EXPORTER CHAR(1),
	FISCAL_REGIME_NO NUMBER(2,0),
	CAT_NO NUMBER(2,0),
	TP_STATUS_NO NUMBER(3,0),
	FISCAL_NO_SIGTAS_OLD VARCHAR2(20),
	INACTIF_DATE DATE,
	CONSTRAINT AVCON_989588987_IF_EM_000 CHECK (IF_EMAIL_REMITTANCE IN ('Y', 'N')),
	CONSTRAINT AVCON_989588987_NSF_C_000 CHECK (NSF_CHEQUE IN ('Y', 'N')),
	CONSTRAINT AVCON_989588987_RESID_000 CHECK (RESIDENT IN ('N', 'Y')),
	CONSTRAINT AVCON_989588987_SENSI_000 CHECK (SENSITIVE IN ('Y', 'N')),
	CONSTRAINT FISCAL_NO_UK UNIQUE (FISCAL_NO),
	CONSTRAINT SYS_C007951 CHECK ("TAX_PAYER_NO" IS NOT NULL),
	CONSTRAINT SYS_C007952 CHECK ("TP_TYPE_NO" IS NOT NULL),
	CONSTRAINT SYS_C007953 CHECK ("COUNTRY_NO" IS NOT NULL),
	CONSTRAINT SYS_C007954 CHECK ("NSF_CHEQUE" IS NOT NULL),
	CONSTRAINT SYS_C007955 CHECK ("CITY_NO" IS NOT NULL),
	CONSTRAINT SYS_C007956 CHECK ("RESIDENT" IS NOT NULL),
	CONSTRAINT SYS_C007957 CHECK ("FISC_YR_START" IS NOT NULL),
	CONSTRAINT SYS_C007958 CHECK ("FISC_YR_END" IS NOT NULL),
	CONSTRAINT SYS_C007959 CHECK ("ENTER_DATE" IS NOT NULL),
	CONSTRAINT SYS_C007960 CHECK ("ENTER_USER" IS NOT NULL),
	CONSTRAINT SYS_C007961 CHECK ("FISCAL_NO" IS NOT NULL),
	CONSTRAINT SYS_C007962 CHECK ("LANG_NO" IS NOT NULL),
	CONSTRAINT SYS_C007963 CHECK ("SENSITIVE" IS NOT NULL),
	CONSTRAINT SYS_C007964 CHECK ("IF_EMAIL_REMITTANCE" IS NOT NULL),
	CONSTRAINT TAX_P_PK PRIMARY KEY (TAX_PAYER_NO),
	CONSTRAINT TAX_P_FISCAL_REGIME_FK FOREIGN KEY (FISCAL_REGIME_NO) REFERENCES FISCAL_REGIME(FISCAL_REGIME_NO),
	CONSTRAINT TAX_P_IRD_EMP_FK FOREIGN KEY (ENTER_USER) REFERENCES IRD_EMPLOYEE(IRD_EMPLOYEE_NO),
	CONSTRAINT TAX_P_IRD_EMP_U_FK FOREIGN KEY (UPDATE_USER) REFERENCES IRD_EMPLOYEE(IRD_EMPLOYEE_NO),
	CONSTRAINT TAX_P_TAX_P_FK FOREIGN KEY (REP_TAX_PAYER_NO) REFERENCES TAX_PAYER(TAX_PAYER_NO)
);
CREATE UNIQUE INDEX FISCAL_NO_UK ON TAX_PAYER (FISCAL_NO);
CREATE INDEX TAX_P_BANK_BR_FK_I ON TAX_PAYER (BRANCH_NO);
CREATE INDEX TAX_P_BANK_FK_I ON TAX_PAYER (BANK_NO);
CREATE INDEX TAX_P_CITY_FK_I ON TAX_PAYER (CITY_NO);
CREATE INDEX TAX_P_CNTRY_FK_I ON TAX_PAYER (COUNTRY_NO);
CREATE INDEX TAX_P_FISCAL_REGIME_FK_I ON TAX_PAYER (FISCAL_REGIME_NO);
CREATE INDEX TAX_P_IRD_EMP_FK_I ON TAX_PAYER (ENTER_USER);
CREATE INDEX TAX_P_IRD_EMP_U_FK_I ON TAX_PAYER (UPDATE_USER);
CREATE INDEX TAX_P_LANG_FK_I ON TAX_PAYER (LANG_NO);
CREATE INDEX TAX_P_LOCALITY_FK_I ON TAX_PAYER (LOCALITY_NO);
CREATE UNIQUE INDEX TAX_P_PK ON TAX_PAYER (TAX_PAYER_NO);
CREATE INDEX TAX_P_POST_CODE_FK_I ON TAX_PAYER (POST_CODE_NO);
CREATE INDEX TAX_P_REP_REASON_FK_I ON TAX_PAYER (REP_REASON_NO);
CREATE INDEX TAX_P_REP_TYPE_FK_I ON TAX_PAYER (REP_TYPE_NO);
CREATE INDEX TAX_P_TAX_P_FK_I ON TAX_PAYER (REP_TAX_PAYER_NO);
CREATE INDEX TAX_P_TP_TYP_FK_I ON TAX_PAYER (TP_TYPE_NO);
CREATE INDEX TAX_P_TXPYRST_FK_I ON TAX_PAYER (TP_STYPE_NO);


-- TAX_PAYER_ACTIVITY_DESC definition

-- DDL generated by DBeaver
-- WARNING: It may differ from actual native database DDL

-- Drop table

-- DROP TABLE TAX_PAYER_ACTIVITY_DESC;

CREATE TABLE TAX_PAYER_ACTIVITY_DESC (
	TAX_PAYER_NO NUMBER,
	ACTIVITY_DESC VARCHAR2(800),
	CONSTRAINT SYS_C0017573 CHECK ("TAX_PAYER_NO" IS NOT NULL),
	CONSTRAINT SYS_C0017574 PRIMARY KEY (TAX_PAYER_NO),
	CONSTRAINT SYS_C0017575 FOREIGN KEY (TAX_PAYER_NO) REFERENCES TAX_PAYER(TAX_PAYER_NO)
);
CREATE UNIQUE INDEX SYS_C0017574 ON TAX_PAYER_ACTIVITY_DESC (TAX_PAYER_NO);


-- TAX_TRANSACTION definition

-- DDL generated by DBeaver
-- WARNING: It may differ from actual native database DDL

-- Drop table

-- DROP TABLE TAX_TRANSACTION;

CREATE TABLE TAX_TRANSACTION (
	TAX_TRANS_NO NUMBER(8,0),
	PAYMENT_LOC_NO NUMBER(2,0),
	PAYMENT_TYPE_NO NUMBER(2,0),
	IRD_EMPLOYEE_NO NUMBER(3,0),
	TAX_CENTRE_NO NUMBER(3,0),
	TRANS_DATE DATE,
	ENTER_DATE DATE,
	ENTER_TIME DATE,
	AMOUNT NUMBER(14,2),
	BANK_NO NUMBER(2,0),
	UNDIST_TAX_TYPE_NO NUMBER(2,0),
	DOC_NO NUMBER(10,0),
	ESTAB_NO NUMBER(6,0),
	PAY_AGREE_NO NUMBER(6,0),
	TAX_ACCOUNT_NO NUMBER(10,0),
	UNDIST_LAST_NAME VARCHAR2(125),
	UNDIST_FIRST_NAME VARCHAR2(15),
	RECEIPT_NO VARCHAR2(10),
	TAX_TRANS_COMMENT VARCHAR2(80),
	TAX_PAYER_NO NUMBER(8,0),
	TAX_TYPE_NO NUMBER(2,0),
	REVERSE_TRANS_NO NUMBER(10,0),
	RECEIPT_DOC_NO NUMBER(10,0),
	PAID_DATE DATE,
	CONSTRAINT SYS_C008040 CHECK ("TAX_TRANS_NO" IS NOT NULL),
	CONSTRAINT SYS_C008041 CHECK ("IRD_EMPLOYEE_NO" IS NOT NULL),
	CONSTRAINT SYS_C008042 CHECK ("TRANS_DATE" IS NOT NULL),
	CONSTRAINT SYS_C008043 CHECK ("ENTER_DATE" IS NOT NULL),
	CONSTRAINT SYS_C008044 CHECK ("ENTER_TIME" IS NOT NULL),
	CONSTRAINT SYS_C008045 CHECK ("AMOUNT" IS NOT NULL),
	CONSTRAINT TAX_TRANS_PK PRIMARY KEY (TAX_TRANS_NO),
	CONSTRAINT TRS_IRD_EMP_FK FOREIGN KEY (IRD_EMPLOYEE_NO) REFERENCES IRD_EMPLOYEE(IRD_EMPLOYEE_NO),
	CONSTRAINT TRS_TAX_P_FK FOREIGN KEY (TAX_PAYER_NO) REFERENCES TAX_PAYER(TAX_PAYER_NO)
);
CREATE INDEX TAX_TRANS_BANK_FK_I ON TAX_TRANSACTION (BANK_NO);
CREATE INDEX TAX_TRANS_DCMT_FK_I ON TAX_TRANSACTION (DOC_NO);
CREATE INDEX TAX_TRANS_ENTER_DATE_I ON TAX_TRANSACTION (ENTER_DATE);
CREATE INDEX TAX_TRANS_ESTAB_FK_I ON TAX_TRANSACTION (ESTAB_NO);
CREATE INDEX TAX_TRANS_IRD_EMP_FK_I ON TAX_TRANSACTION (IRD_EMPLOYEE_NO);
CREATE INDEX TAX_TRANS_PAYAGREE_FK_I ON TAX_TRANSACTION (PAY_AGREE_NO);
CREATE INDEX TAX_TRANS_PAY_LOC_FK_I ON TAX_TRANSACTION (PAYMENT_LOC_NO);
CREATE INDEX TAX_TRANS_PAY_TYPE_FK_I ON TAX_TRANSACTION (PAYMENT_TYPE_NO);
CREATE UNIQUE INDEX TAX_TRANS_PK ON TAX_TRANSACTION (TAX_TRANS_NO);
CREATE INDEX TAX_TRANS_TAXAC_FK_I ON TAX_TRANSACTION (TAX_ACCOUNT_NO);
CREATE INDEX TAX_TRANS_TAX_CENTRE_FK_I ON TAX_TRANSACTION (TAX_CENTRE_NO);
CREATE INDEX TAX_TRANS_TAX_P_FK_I ON TAX_TRANSACTION (TAX_PAYER_NO);
CREATE INDEX TAX_TRANS_TAX_TYP_FK_I ON TAX_TRANSACTION (UNDIST_TAX_TYPE_NO);
CREATE INDEX TAX_TRANS_TRANS_DATE_I ON TAX_TRANSACTION (TRANS_DATE);
CREATE INDEX TRANS_PAID_DATE ON TAX_TRANSACTION (PAID_DATE);


-- CORPORATION definition

-- DDL generated by DBeaver
-- WARNING: It may differ from actual native database DDL

-- Drop table

-- DROP TABLE CORPORATION;

CREATE TABLE CORPORATION (
	TAX_PAYER_NO NUMBER(8,0),
	REGIST_NAME VARCHAR2(100),
	FOR_PAR_NAME VARCHAR2(45),
	FOR_PAR_ADDRESS VARCHAR2(45),
	COMM_REG_NO VARCHAR2(10),
	COUNTRY_NO NUMBER(3,0),
	REG_DATE DATE,
	ENTER_DATE DATE,
	UPDATE_DATE DATE,
	ENTER_USER NUMBER(3,0),
	UPDATE_USER NUMBER(3,0),
	NO_OF_SHARES NUMBER(10,0),
	SHARE_VALUE NUMBER(14,2),
	CITY_DESC VARCHAR2(50),
	CONSTRAINT CORP_PK PRIMARY KEY (TAX_PAYER_NO),
	CONSTRAINT SYS_C006437 CHECK ("TAX_PAYER_NO" IS NOT NULL),
	CONSTRAINT SYS_C006438 CHECK ("REGIST_NAME" IS NOT NULL),
	CONSTRAINT CORP_IRD_EMP_E_FK FOREIGN KEY (ENTER_USER) REFERENCES IRD_EMPLOYEE(IRD_EMPLOYEE_NO),
	CONSTRAINT CORP_IRD_EMP_U_FK FOREIGN KEY (UPDATE_USER) REFERENCES IRD_EMPLOYEE(IRD_EMPLOYEE_NO)
);
CREATE INDEX CORP_CNTRY_FK_I ON CORPORATION (COUNTRY_NO);
CREATE INDEX CORP_IRD_EMP_E_FK_I ON CORPORATION (ENTER_USER);
CREATE INDEX CORP_IRD_EMP_U_FK_I ON CORPORATION (UPDATE_USER);
CREATE UNIQUE INDEX CORP_TAX_P_FK_I ON CORPORATION (TAX_PAYER_NO);


-- ENTERPRISE definition

-- DDL generated by DBeaver
-- WARNING: It may differ from actual native database DDL

-- Drop table

-- DROP TABLE ENTERPRISE;

CREATE TABLE ENTERPRISE (
	ENTERPRISE_NO NUMBER(6,0),
	TAX_PAYER_NO NUMBER(8,0),
	ENT_TYPE_NO NUMBER(2,0),
	PHONE_NO VARCHAR2(15),
	START_DATE DATE,
	ENTRY_DATE DATE,
	FISC_YR_START NUMBER(4,0),
	FISC_YR_END NUMBER(4,0),
	JURIDICAL_FORM_NO NUMBER(2,0),
	SECTOR_ACT_NO NUMBER(3,0),
	OCCUPATION_NO NUMBER(3,0),
	CON_TITLE_NO NUMBER(2,0),
	USUAL_NAME VARCHAR2(100),
	FAX_NO VARCHAR2(15),
	ADDRESS_E_MAIL VARCHAR2(70),
	TAX_CONTACT_NAME VARCHAR2(120),
	CLOSE_DATE DATE,
	PLACE_CREATED VARCHAR2(30),
	UNMIK_APPL_NR VARCHAR2(50),
	ORIGIN_CAPITAL_NO NUMBER(2,0),
	NO_EMPLOYEES NUMBER(6,0),
	PREV_REG_NO VARCHAR2(15),
	CUSTOM_NO VARCHAR2(15),
	MANAGER_FIRST_NAME VARCHAR2(20),
	MANAGER_LAST_NAME VARCHAR2(20),
	RATE_ZONE_NO NUMBER(5,0),
	BUSINESS_SIZE VARCHAR2(1),
	UPDATE_DATE DATE,
	MOBILE_PHONE VARCHAR2(15),
	COUNTRY_NO NUMBER(3,0),
	ENTER_DATE DATE,
	ENTER_USER NUMBER(3,0),
	UPDATE_USER NUMBER(3,0),
	FROM_ESTAB_NO NUMBER(10,0),
	TAXABLE_TURNOVER NUMBER(16,2),
	COMM_REG_NO VARCHAR2(10),
	REGIST_NAME VARCHAR2(100),
	REG_DATE DATE,
	NOMINATED_OFFICER VARCHAR2(100),
	MAIN_ENTERPRISE CHAR(1),
	COUNTRY_NO_ORIGIN_CAPITAL NUMBER(3,0),
	CONSTRAINT ENT_PK PRIMARY KEY (ENTERPRISE_NO),
	CONSTRAINT SYS_C006698 CHECK ("ENTERPRISE_NO" IS NOT NULL),
	CONSTRAINT SYS_C006699 CHECK ("TAX_PAYER_NO" IS NOT NULL),
	CONSTRAINT SYS_C006700 CHECK ("ENT_TYPE_NO" IS NOT NULL),
	CONSTRAINT SYS_C006701 CHECK ("START_DATE" IS NOT NULL),
	CONSTRAINT SYS_C006702 CHECK ("ENTRY_DATE" IS NOT NULL),
	CONSTRAINT ENT_IRD_EMP_E_FK FOREIGN KEY (ENTER_USER) REFERENCES IRD_EMPLOYEE(IRD_EMPLOYEE_NO),
	CONSTRAINT ENT_IRD_EMP_U_FK FOREIGN KEY (UPDATE_USER) REFERENCES IRD_EMPLOYEE(IRD_EMPLOYEE_NO),
	CONSTRAINT ENT_TAX_P_FK FOREIGN KEY (TAX_PAYER_NO) REFERENCES TAX_PAYER(TAX_PAYER_NO) ON DELETE CASCADE,
	CONSTRAINT ENT__FK FOREIGN KEY (SECTOR_ACT_NO) REFERENCES SECTOR_ACTIVITY(SECTOR_ACT_NO)
);
CREATE INDEX ENT_CONTACT_T_FK_I ON ENTERPRISE (CON_TITLE_NO);
CREATE INDEX ENT_COUNTRY_ORIG_CAP_FK_I ON ENTERPRISE (COUNTRY_NO_ORIGIN_CAPITAL);
CREATE INDEX ENT_ENT_TYP_FK_I ON ENTERPRISE (ENT_TYPE_NO);
CREATE INDEX ENT_IRD_EMP_E_FK_I ON ENTERPRISE (ENTER_USER);
CREATE INDEX ENT_IRD_EMP_U_FK_I ON ENTERPRISE (UPDATE_USER);
CREATE INDEX ENT_JUR_FORM_FK_I ON ENTERPRISE (JURIDICAL_FORM_NO);
CREATE INDEX ENT_OCCUP_FK_I ON ENTERPRISE (OCCUPATION_NO);
CREATE INDEX ENT_OC_FK_I ON ENTERPRISE (ORIGIN_CAPITAL_NO);
CREATE UNIQUE INDEX ENT_PK ON ENTERPRISE (ENTERPRISE_NO);
CREATE INDEX ENT_TAX_P_FK_I ON ENTERPRISE (TAX_PAYER_NO);
CREATE INDEX ENT__FK_I ON ENTERPRISE (SECTOR_ACT_NO);


-- INDIVIDUAL definition

-- DDL generated by DBeaver
-- WARNING: It may differ from actual native database DDL

-- Drop table

-- DROP TABLE INDIVIDUAL;

CREATE TABLE INDIVIDUAL (
	TAX_PAYER_NO NUMBER(8,0),
	MAR_STAT_NO NUMBER(2,0),
	NAT_NO NUMBER(2,0),
	COUNTRY_NO NUMBER(3,0),
	CITY_NO NUMBER(4,0),
	OCCUPATION_NO NUMBER(3,0),
	LAST_NAME VARCHAR2(60),
	FIRST_NAME VARCHAR2(60),
	RESIDENT_ADDRESS VARCHAR2(60),
	SEX VARCHAR2(1),
	BIRTH_DATE DATE,
	POST_CODE_NO NUMBER(3,0),
	HOME_PHONE VARCHAR2(15),
	WORK_PHONE VARCHAR2(15),
	DECEASE_DATE DATE,
	SOCIAL_SEC_NO VARCHAR2(15),
	NAT_CARD_ID VARCHAR2(12),
	OTHER_ID VARCHAR2(10),
	MAIDEN_NAME VARCHAR2(60),
	ENTER_DATE DATE,
	TAN VARCHAR2(10),
	PHONE_EXT NUMBER(4,0),
	FAX_NO VARCHAR2(15),
	ADDRESS_E_MAIL VARCHAR2(30),
	FATHER_FIRST_NAME VARCHAR2(60),
	MOTHER_NAME VARCHAR2(60),
	MOTHER_FIRST_NAME VARCHAR2(60),
	SEX_NO VARCHAR2(1),
	STREET_NO VARCHAR2(15),
	DOOR_NO VARCHAR2(5),
	LOCALITY_NO NUMBER(5,0),
	BIRTH_PLACE VARCHAR2(30),
	MOBILE_PHONE VARCHAR2(15),
	REG_DOC_NO VARCHAR2(35),
	MIDDLE_NAME VARCHAR2(30),
	PARISH_NO NUMBER(3,0),
	TYPE_OF_DOC_NO NUMBER(2,0),
	BIRTH_PARISH_NO NUMBER(3,0),
	UPDATE_DATE DATE,
	ENTER_USER NUMBER(3,0),
	UPDATE_USER NUMBER(3,0),
	WEREDA_NO NUMBER(10,0),
	KEBELE_DESC VARCHAR2(30),
	PO_BOX VARCHAR2(50),
	FATHER_LAST_NAME VARCHAR2(60),
	CONSTRAINT IND_PK PRIMARY KEY (TAX_PAYER_NO),
	CONSTRAINT IND_UK1 UNIQUE (SOCIAL_SEC_NO),
	CONSTRAINT IND_UK3 UNIQUE (OTHER_ID),
	CONSTRAINT SYS_C006926 CHECK ("TAX_PAYER_NO" IS NOT NULL),
	CONSTRAINT SYS_C006927 CHECK ("COUNTRY_NO" IS NOT NULL),
	CONSTRAINT SYS_C006928 CHECK ("CITY_NO" IS NOT NULL),
	CONSTRAINT SYS_C006929 CHECK ("LAST_NAME" IS NOT NULL),
	CONSTRAINT SYS_C006930 CHECK ("FIRST_NAME" IS NOT NULL),
	CONSTRAINT SYS_C006931 CHECK ("PARISH_NO" IS NOT NULL),
	CONSTRAINT SYS_C006935 CHECK ( sex IN ( 'M' , 'F' )  ),
	CONSTRAINT IND_IRD_EMP_E_FK FOREIGN KEY (ENTER_USER) REFERENCES IRD_EMPLOYEE(IRD_EMPLOYEE_NO),
	CONSTRAINT IND_IRD_EMP_U_FK FOREIGN KEY (UPDATE_USER) REFERENCES IRD_EMPLOYEE(IRD_EMPLOYEE_NO)
);
CREATE INDEX IND_CITY_FK_I ON INDIVIDUAL (CITY_NO);
CREATE INDEX IND_CNTRY_FK_I ON INDIVIDUAL (COUNTRY_NO);
CREATE INDEX IND_IRD_EMP_E_FK_I ON INDIVIDUAL (ENTER_USER);
CREATE INDEX IND_IRD_EMP_U_FK_I ON INDIVIDUAL (UPDATE_USER);
CREATE INDEX IND_LOCALITY_FK_I ON INDIVIDUAL (LOCALITY_NO);
CREATE INDEX IND_MAR_STAT_FK_I ON INDIVIDUAL (MAR_STAT_NO);
CREATE INDEX IND_NAT_FK_I ON INDIVIDUAL (NAT_NO);
CREATE INDEX IND_OCCUP_FK_I ON INDIVIDUAL (OCCUPATION_NO);
CREATE INDEX IND_PAR_FK_I ON INDIVIDUAL (PARISH_NO);
CREATE UNIQUE INDEX IND_PK ON INDIVIDUAL (TAX_PAYER_NO);
CREATE INDEX IND_POST_CODE_FK_I ON INDIVIDUAL (POST_CODE_NO);
CREATE INDEX IND_SEX_FK_I ON INDIVIDUAL (SEX_NO);
CREATE UNIQUE INDEX IND_UK1 ON INDIVIDUAL (SOCIAL_SEC_NO);
CREATE UNIQUE INDEX IND_UK3 ON INDIVIDUAL (OTHER_ID);


-- TAX_ACCOUNT definition

-- DDL generated by DBeaver
-- WARNING: It may differ from actual native database DDL

-- Drop table

-- DROP TABLE TAX_ACCOUNT;

CREATE TABLE TAX_ACCOUNT (
	TAX_ACCOUNT_NO NUMBER(10,0),
	TAX_PAYER_NO NUMBER(8,0),
	TAX_TYPE_NO NUMBER(2,0),
	OPENING_TAX NUMBER(16,2),
	OPENING_PEN NUMBER(16,2),
	OPENING_INT NUMBER(16,2),
	TAX_BALANCE NUMBER(16,2),
	PEN_BALANCE NUMBER(16,2),
	INT_BALANCE NUMBER(16,2),
	REG_DATE DATE,
	ENTRY_DATE DATE,
	ENTRY_USER VARCHAR2(15),
	LOCALITY_NO NUMBER(5,0),
	TAX_CENTRE_NO NUMBER(3,0),
	CITY_NO NUMBER(4,0),
	COUNTRY_NO NUMBER(3,0),
	POST_CODE_NO NUMBER(3,0),
	REP_NAME VARCHAR2(40),
	INST_FLAG VARCHAR2(1),
	MAILING_ADDRESS VARCHAR2(70),
	INSTALL_TO_PAY VARCHAR2(240),
	TAX_ACCT_NO VARCHAR2(8),
	REG_RECEPT_DATE DATE,
	REF_AGAINST_INST VARCHAR2(1),
	OPEN_PEN_DATE DATE,
	OPEN_INT_DATE DATE,
	CALC_STATUS_NO NUMBER(2,0),
	ICODE VARCHAR2(10),
	VISIT_DATE DATE,
	STREET_NO VARCHAR2(15),
	CLOSE_DATE DATE,
	WEREDA_NO NUMBER(10,0),
	KEBELE_DESC VARCHAR2(30),
	PO_BOX VARCHAR2(50),
	SEND_CORR_TO_REPR CHAR(1),
	CONSTRAINT SYS_C007867 CHECK ("TAX_ACCOUNT_NO" IS NOT NULL),
	CONSTRAINT SYS_C007868 CHECK ("TAX_PAYER_NO" IS NOT NULL),
	CONSTRAINT SYS_C007869 CHECK ("TAX_TYPE_NO" IS NOT NULL),
	CONSTRAINT SYS_C007870 CHECK ("OPENING_TAX" IS NOT NULL),
	CONSTRAINT SYS_C007871 CHECK ("OPENING_PEN" IS NOT NULL),
	CONSTRAINT SYS_C007872 CHECK ("OPENING_INT" IS NOT NULL),
	CONSTRAINT SYS_C007873 CHECK ("TAX_BALANCE" IS NOT NULL),
	CONSTRAINT SYS_C007874 CHECK ("PEN_BALANCE" IS NOT NULL),
	CONSTRAINT SYS_C007875 CHECK ("INT_BALANCE" IS NOT NULL),
	CONSTRAINT SYS_C007876 CHECK ("REG_DATE" IS NOT NULL),
	CONSTRAINT SYS_C007877 CHECK ("ENTRY_DATE" IS NOT NULL),
	CONSTRAINT SYS_C007878 CHECK ("ENTRY_USER" IS NOT NULL),
	CONSTRAINT TAXAC_PK PRIMARY KEY (TAX_ACCOUNT_NO),
	CONSTRAINT TAXAC_TAXAC2_UK UNIQUE (TAX_PAYER_NO,TAX_TYPE_NO,TAX_CENTRE_NO),
	CONSTRAINT TAXAC_TAX_P_FK FOREIGN KEY (TAX_PAYER_NO) REFERENCES TAX_PAYER(TAX_PAYER_NO),
	CONSTRAINT TAXAC_TAX_TYPE_NO_FK FOREIGN KEY (TAX_TYPE_NO) REFERENCES TAX_TYPE(TAX_TYPE_NO)
);
CREATE INDEX CITY_FK_I ON TAX_ACCOUNT (CITY_NO);
CREATE INDEX TAXAC_CNTRY_FK_I ON TAX_ACCOUNT (COUNTRY_NO);
CREATE INDEX TAXAC_LOCALITY_FK_I ON TAX_ACCOUNT (LOCALITY_NO);
CREATE UNIQUE INDEX TAXAC_PK ON TAX_ACCOUNT (TAX_ACCOUNT_NO);
CREATE INDEX TAXAC_POST_CODE_FK_I ON TAX_ACCOUNT (POST_CODE_NO);
CREATE UNIQUE INDEX TAXAC_TAXAC2_UK ON TAX_ACCOUNT (TAX_PAYER_NO,TAX_TYPE_NO,TAX_CENTRE_NO);
CREATE INDEX TAXAC_TAX_CENTRE_FK_I ON TAX_ACCOUNT (TAX_CENTRE_NO);
CREATE INDEX TAXAC_TAX_P_FK_I ON TAX_ACCOUNT (TAX_PAYER_NO);
CREATE INDEX TAXAC_TAX_TYP_FK_I ON TAX_ACCOUNT (TAX_TYPE_NO);


-- ASSESSMENT definition

-- DDL generated by DBeaver
-- WARNING: It may differ from actual native database DDL

-- Drop table

-- DROP TABLE ASSESSMENT;

CREATE TABLE ASSESSMENT (
	ASSESS_NO NUMBER(10,0),
	ASSESS_TYPE_NO NUMBER(2,0),
	TAX_PAYER_NO NUMBER(8,0),
	TAX_TYPE_NO NUMBER(3,0),
	TAX_PERIOD_NO NUMBER(6,0),
	ENTRY_DATE DATE,
	ENTRY_USER VARCHAR2(10),
	ASSESS_NEW_ASSESS_NO NUMBER(10,0),
	BATCH_NO NUMBER(5,0),
	COLLECTION_CASE_NO NUMBER(6,0),
	ESTAB_NO NUMBER(6,0),
	A_TAX_TO_PAY NUMBER(16,2),
	RECEPTION_DATE DATE,
	PREPARED_BY VARCHAR2(40),
	TAX_TO_PAY NUMBER(16,2),
	TAX_PAID NUMBER(16,2),
	PEN_TO_PAY NUMBER(16,2),
	PEN_PAID NUMBER(16,2),
	INT_TO_PAY NUMBER(16,2),
	INT_PAID NUMBER(16,2),
	BALANCE NUMBER(16,2),
	TP_START_DATE DATE,
	TP_END_DATE DATE,
	TP_DUE_DATE DATE,
	ASSESS_COMMENT VARCHAR2(2000),
	CALC_STATUS_NO NUMBER(2,0),
	LIC_BASE_NO NUMBER(6,0),
	INT_DATE DATE,
	PAY_PEN_DATE DATE,
	FILE_PEN_DATE DATE,
	FORM_NO NUMBER(3,0),
	VERSION_NO NUMBER(3,0),
	LAST_TAX_BALANCE NUMBER(16,2),
	LAST_PEN_BALANCE NUMBER(16,2),
	LAST_INT_BALANCE NUMBER(16,2),
	PLAST_TAX_BALANCE NUMBER(16,2),
	PLAST_PEN_BALANCE NUMBER(16,2),
	PLAST_INT_BALANCE NUMBER(16,2),
	TAX_CENTRE_NO NUMBER(3,0),
	LICENSE_NO NUMBER(6,0),
	TAX_ACCOUNT_NO NUMBER(10,0),
	TP_PAYMENT_DATE DATE,
	INT_DATE_TEMP DATE,
	LAST_PEN_INT_CALC_DATE DATE,
	LAST_CALC_DATE DATE,
	TRIGGERING_ASSESS_NO NUMBER(10,0),
	REASSESS_RQST_EMPLEE_NO NUMBER(3,0),
	REASSESS_REASON_NO NUMBER(2,0),
	RANGE_START_TAX_PERIOD_NO NUMBER(6,0),
	REASSESS_AUTH_FL CHAR(1) DEFAULT 'N',
	RECORD_APPROVAL_NO NUMBER(10,0),
	SUPPORT_DOC_NO NUMBER(10,0),
	TAX_EXEMPTED_AMT NUMBER(16,2),
	TO_RECEIVED_DATE DATE,
	CONSTRAINT ASSESS_PK PRIMARY KEY (ASSESS_NO),
	CONSTRAINT SYS_C006102 CHECK ("ASSESS_NO" IS NOT NULL),
	CONSTRAINT SYS_C006103 CHECK ("ASSESS_TYPE_NO" IS NOT NULL),
	CONSTRAINT SYS_C006104 CHECK ("TAX_TYPE_NO" IS NOT NULL),
	CONSTRAINT SYS_C006105 CHECK ("ENTRY_DATE" IS NOT NULL),
	CONSTRAINT SYS_C006106 CHECK ("ENTRY_USER" IS NOT NULL),
	CONSTRAINT SYS_C006107 CHECK ("REASSESS_AUTH_FL" IS NOT NULL)
);
CREATE INDEX ASSESS_ASSESS_FK_I ON ASSESSMENT (ASSESS_NEW_ASSESS_NO);
CREATE INDEX ASSESS_ASS_TY_FK_I ON ASSESSMENT (ASSESS_TYPE_NO);
CREATE INDEX ASSESS_BATCH_FK_I ON ASSESSMENT (BATCH_NO);
CREATE INDEX ASSESS_ESTAB_FK_I ON ASSESSMENT (ESTAB_NO);
CREATE INDEX ASSESS_FORM_VER_I ON ASSESSMENT (FORM_NO,VERSION_NO);
CREATE INDEX ASSESS_LICENCE_FK_I ON ASSESSMENT (LICENSE_NO);
CREATE INDEX ASSESS_LIC_BASE_FK_I ON ASSESSMENT (LIC_BASE_NO);
CREATE UNIQUE INDEX ASSESS_PK ON ASSESSMENT (ASSESS_NO);
CREATE INDEX ASSESS_TAXAC_FK_I ON ASSESSMENT (TAX_PAYER_NO,TAX_TYPE_NO);
CREATE INDEX ASSESS_TAX_ACCT ON ASSESSMENT (TAX_ACCOUNT_NO);
CREATE INDEX ASSESS_TAX_CENTRE_FK_I ON ASSESSMENT (TAX_CENTRE_NO);
CREATE INDEX ASSESS_TX_PERIOD_FK_I ON ASSESSMENT (TAX_PERIOD_NO);
CREATE INDEX ASS_PAYMENT_DATE ON ASSESSMENT (TP_PAYMENT_DATE);
CREATE INDEX ASS_TP_DUE_DATE ON ASSESSMENT (TP_DUE_DATE);
CREATE INDEX RECEPTION_DATE_INDEX ON ASSESSMENT (RECEPTION_DATE);


-- DOCUMENT definition

-- DDL generated by DBeaver
-- WARNING: It may differ from actual native database DDL

-- Drop table

-- DROP TABLE DOCUMENT;

CREATE TABLE DOCUMENT (
	DOC_NO NUMBER(10,0),
	TAX_TYPE_NO NUMBER(2,0),
	TAX_PERIOD_NO NUMBER(6,0),
	TAX_PAYER_NO NUMBER(8,0),
	DOC_TYPE_NO NUMBER(3,0),
	CREATED_DATE DATE,
	LETTER_NO NUMBER(3,0),
	ASSESS_NO NUMBER(10,0),
	RECEIVED_DATE DATE,
	PRINTED_DATE DATE,
	DOC_TP_START_DATE DATE,
	DOC_TP_END_DATE DATE,
	DOC_TP_DUE_DATE DATE,
	DOC_TP_MONTH NUMBER(2,0),
	DOC_TP_YEAR NUMBER(4,0),
	PERSONAL_TEXT VARCHAR2(2000),
	IRD_FILE_NO NUMBER(10,0),
	INSTALL_RATE_NO NUMBER(6,0),
	JOB_NO NUMBER(8,0),
	STATE_CHANGE_DATE DATE,
	STATE_CHANGE_USER VARCHAR2(8),
	RECEIPT VARCHAR2(1),
	ESTAB_NO NUMBER(8,0),
	DOC_STATE_NO NUMBER(2,0),
	FORM_NO NUMBER(3,0),
	VERSION_NO NUMBER(3,0),
	LIC_BASE_NO NUMBER(6,0),
	PAY_AGREE_NO NUMBER(6,0),
	DOC_INST_MONTH NUMBER(2,0),
	DOC_INST_YEAR NUMBER(4,0),
	ENTRY_USER VARCHAR2(15),
	MV_REGIS_NO NUMBER(10,0),
	TAX_CENTRE_NO NUMBER(3,0),
	DOC_TP_PAYMENT_DATE DATE,
	LICENSE_NO NUMBER(6,0),
	EXT_DOC_NO VARCHAR2(15),
	REASON VARCHAR2(500),
	BATCH_NO NUMBER(8,0),
	TP_INSTALL_RATE_NO NUMBER(10,0),
	DELIVERED_DATE DATE,
	DISTRIBUTED_TO_IRD_EMP_NO NUMBER(3,0),
	DISTRIBUTED_DATE DATE,
	COMMENTS VARCHAR2(500),
	RECEIPT_PRINTED VARCHAR2(1),
	DOC_TP_WEEK NUMBER(2,0),
	DELIVERED_BY_IRD_EMP_NO NUMBER(3,0),
	PHYSICAL_OBJECT_NO NUMBER(10,0),
	DOC_SUBJECT VARCHAR2(100),
	LOST_BY_IRD_EMP_NO NUMBER(3,0),
	LOST_DATE DATE,
	TAX_PAYER_NAME VARCHAR2(125),
	NOTIF_DATE DATE,
	TITRE_NO NUMBER(10,0),
	TITRE_ORIGINE VARCHAR2(100),
	CONSTRAINT DCMT_PK PRIMARY KEY (DOC_NO),
	CONSTRAINT SYS_C006631 CHECK ("DOC_NO" IS NOT NULL),
	CONSTRAINT SYS_C006632 CHECK ("DOC_TYPE_NO" IS NOT NULL),
	CONSTRAINT SYS_C006633 CHECK ("CREATED_DATE" IS NOT NULL),
	CONSTRAINT SYS_C006634 CHECK ("DOC_STATE_NO" IS NOT NULL),
	CONSTRAINT SYS_C006635 CHECK ("TAX_CENTRE_NO" IS NOT NULL)
);
CREATE INDEX DCMT_ASSESS_FK_I ON DOCUMENT (ASSESS_NO);
CREATE INDEX DCMT_DOC_STATE_FK_I ON DOCUMENT (DOC_STATE_NO);
CREATE INDEX DCMT_DOC_TYP_FK_I ON DOCUMENT (DOC_TYPE_NO);
CREATE INDEX DCMT_ESTAB_FK_I ON DOCUMENT (ESTAB_NO);
CREATE INDEX DCMT_FORM_VER_FK_I ON DOCUMENT (VERSION_NO,FORM_NO);
CREATE INDEX DCMT_IDX1 ON DOCUMENT (TAX_PAYER_NO,TAX_TYPE_NO,LIC_BASE_NO,MV_REGIS_NO);
CREATE INDEX DCMT_INT_RATE_FK_I ON DOCUMENT (INSTALL_RATE_NO);
CREATE INDEX DCMT_IRD_FILE_FK_I ON DOCUMENT (IRD_FILE_NO);
CREATE INDEX DCMT_JOB_FK_I ON DOCUMENT (JOB_NO);
CREATE INDEX DCMT_LETT_FK_I ON DOCUMENT (LETTER_NO);
CREATE INDEX DCMT_LICENCE_FK_I ON DOCUMENT (LICENSE_NO);
CREATE INDEX DCMT_LIC_BASE_FK_I ON DOCUMENT (LIC_BASE_NO);
CREATE INDEX DCMT_MV_REG_FK_I ON DOCUMENT (MV_REGIS_NO);
CREATE INDEX DCMT_PAYAGREE_FK_I ON DOCUMENT (PAY_AGREE_NO);
CREATE UNIQUE INDEX DCMT_PK ON DOCUMENT (DOC_NO);
CREATE INDEX DCMT_TAX_CENTRE_FK_I ON DOCUMENT (TAX_CENTRE_NO);
CREATE INDEX DCMT_TAX_P_FK_I ON DOCUMENT (TAX_PAYER_NO);
CREATE INDEX DCMT_TAX_TYP_FK_I ON DOCUMENT (TAX_TYPE_NO);
CREATE INDEX DCMT_TP_IN_RATE_FK_I ON DOCUMENT (TP_INSTALL_RATE_NO);
CREATE INDEX DCMT_TX_PERIOD_FK_I ON DOCUMENT (TAX_PERIOD_NO);
CREATE INDEX DMCT_DUE_DATE ON DOCUMENT (DOC_TP_DUE_DATE);
CREATE INDEX DMCT_EXT_DOC_NO ON DOCUMENT (EXT_DOC_NO);
CREATE INDEX DMCT_PAYMENT_DATE ON DOCUMENT (DOC_TP_PAYMENT_DATE);
CREATE INDEX DOC_LOST_BY_EMP_FK_I ON DOCUMENT (LOST_BY_IRD_EMP_NO);
CREATE INDEX RECEIVED_DATE_INDEX ON DOCUMENT (RECEIVED_DATE);


-- DOC_AMOUNT definition

-- DDL generated by DBeaver
-- WARNING: It may differ from actual native database DDL

-- Drop table

-- DROP TABLE DOC_AMOUNT;

CREATE TABLE DOC_AMOUNT (
	DOC_NO NUMBER(10,0),
	TAX_AMOUNT NUMBER(18,2),
	INTEREST_AMT NUMBER(13,2),
	PENALTY_AMT NUMBER(13,2),
	INSTALL_AMOUNT NUMBER(13,2),
	CONSTRAINT LPA_PK PRIMARY KEY (DOC_NO),
	CONSTRAINT SYS_C006584 CHECK ("DOC_NO" IS NOT NULL)
);
CREATE UNIQUE INDEX LPA_PK ON DOC_AMOUNT (DOC_NO);


-- TAXA_INACTIVE_PERIOD definition

-- DDL generated by DBeaver
-- WARNING: It may differ from actual native database DDL

-- Drop table

-- DROP TABLE TAXA_INACTIVE_PERIOD;

CREATE TABLE TAXA_INACTIVE_PERIOD (
	TAX_ACCT_NO VARCHAR2(8),
	TAX_TYPE_NO NUMBER(2,0),
	TAX_PAYER_NO NUMBER(8,0),
	TIP_NO NUMBER(6,0),
	APPROV_DOC_NO NUMBER(6,0),
	EXEMP_TYPE_NO NUMBER(2,0),
	INACT_TYPE_NO NUMBER(2,0),
	INACT_BY_NO NUMBER(2,0),
	START_DATE DATE,
	END_DATE DATE,
	ISSUED_DATE DATE,
	REASON VARCHAR2(50),
	ENTRY_DATE DATE,
	ENTRY_USER VARCHAR2(15),
	MODIFIED_DATE DATE,
	MODIFIED_USER VARCHAR2(15),
	TAX_ACCOUNT_NO NUMBER(10,0),
	TAX_PERIOD_NO NUMBER(6,0),
	RECORD_APPROVAL_NO NUMBER(10,0),
	INDEF_SUSPEND_FL CHAR(1) DEFAULT 'N',
	CONSTRAINT CHECK_INDEF_SUSPENSION CHECK (INDEF_SUSPEND_FL IN ('Y', 'N')),
	CONSTRAINT SYS_C007896 CHECK ("TAX_TYPE_NO" IS NOT NULL),
	CONSTRAINT SYS_C007897 CHECK ("TAX_PAYER_NO" IS NOT NULL),
	CONSTRAINT SYS_C007898 CHECK ("TIP_NO" IS NOT NULL),
	CONSTRAINT SYS_C007899 CHECK ("EXEMP_TYPE_NO" IS NOT NULL),
	CONSTRAINT SYS_C007900 CHECK ("INACT_TYPE_NO" IS NOT NULL),
	CONSTRAINT SYS_C007901 CHECK ("START_DATE" IS NOT NULL),
	CONSTRAINT SYS_C007902 CHECK ("REASON" IS NOT NULL),
	CONSTRAINT SYS_C007903 CHECK ("ENTRY_DATE" IS NOT NULL),
	CONSTRAINT SYS_C007904 CHECK ("ENTRY_USER" IS NOT NULL),
	CONSTRAINT SYS_C007905 CHECK ("MODIFIED_DATE" IS NOT NULL),
	CONSTRAINT SYS_C007906 CHECK ("MODIFIED_USER" IS NOT NULL),
	CONSTRAINT SYS_C007907 CHECK ("TAX_ACCOUNT_NO" IS NOT NULL),
	CONSTRAINT TAXA_TIP_PK PRIMARY KEY (TIP_NO)
);
CREATE INDEX TAXA_TIP_DCMT_FK_I ON TAXA_INACTIVE_PERIOD (APPROV_DOC_NO);
CREATE INDEX TAXA_TIP_EXEMP_TYP_FK_I ON TAXA_INACTIVE_PERIOD (EXEMP_TYPE_NO);
CREATE INDEX TAXA_TIP_INACT_BY_FK_I ON TAXA_INACTIVE_PERIOD (INACT_BY_NO);
CREATE INDEX TAXA_TIP_INACT_TYP_FK_I ON TAXA_INACTIVE_PERIOD (INACT_TYPE_NO);
CREATE UNIQUE INDEX TAXA_TIP_PK ON TAXA_INACTIVE_PERIOD (TIP_NO);
CREATE INDEX TAXA_TIP_TAXAC_FK_I ON TAXA_INACTIVE_PERIOD (TAX_PAYER_NO);


-- TAX_SUB_TRANS definition

-- DDL generated by DBeaver
-- WARNING: It may differ from actual native database DDL

-- Drop table

-- DROP TABLE TAX_SUB_TRANS;

CREATE TABLE TAX_SUB_TRANS (
	TAX_SUB_TRANS_NO NUMBER(8,0),
	CHARGE_TYPE_NO NUMBER(2,0),
	TAX_TRANS_TYPE_NO NUMBER(2,0),
	TAX_TRANS_NO NUMBER(8,0),
	AMOUNT NUMBER(14,2),
	ENTER_DATE DATE,
	ENTER_TIME DATE,
	TAXTR_COM_NO NUMBER(2,0),
	TAX_PERIOD_NO NUMBER(6,0),
	ASSESS_NO NUMBER(8,0),
	ARREARS_FLAG VARCHAR2(1),
	REVERSE_FLAG VARCHAR2(1),
	REVERSE_TRANS_NO NUMBER(8,0),
	SUB_TRANS_COMMENT VARCHAR2(80),
	AUTO_GEN_FLAG VARCHAR2(1),
	PEN_NO NUMBER(4,0),
	INT_NO NUMBER(4,0),
	JOB_NO NUMBER(8,0),
	LIC_BASE_NO NUMBER(6,0),
	ESTAB_NO NUMBER(6,0),
	TAX_ACCOUNT_NO NUMBER(10,0),
	TAX_CENTRE_NO NUMBER(3,0),
	TAX_TYPE_NO NUMBER(2,0),
	LICENSE_NO NUMBER(6,0),
	SET_BY_CAPT_REM VARCHAR2(1),
	SET_BY_MOD VARCHAR2(1),
	CREDIT_SOURCE_TYPE_NO NUMBER(2,0),
	INST_ASSESS_NO NUMBER(10,0),
	INST_TRANSFER_FLAG VARCHAR2(1),
	APPEAL_DEPOSIT_FL CHAR(1) DEFAULT 'N' ,
	REVENUE_CODE_NO NUMBER(10,0),
	REFUND_NO NUMBER(10,0),
	TRANSFER_TAX_TYPE_NO NUMBER(2,0),
	TRANSFER_ASSESS_NO NUMBER(8,0),
	TAX_AUTH_NO NUMBER(10,0),
	COMMON_REVENUE CHAR(1),
	PERIODE_VERIF VARCHAR2(100),
	TYPE_VERIF VARCHAR2(50),
	CONSTRAINT AVCON_994710197_ARREA_000 CHECK (ARREARS_FLAG IN ('Y', 'N')),
	CONSTRAINT CHK_APPL_DEPOS CHECK (appeal_deposit_fl in ('Y', 'N')),
	CONSTRAINT SYS_C008028 CHECK ("TAX_SUB_TRANS_NO" IS NOT NULL),
	CONSTRAINT SYS_C008029 CHECK ("CHARGE_TYPE_NO" IS NOT NULL),
	CONSTRAINT SYS_C008030 CHECK ("TAX_TRANS_TYPE_NO" IS NOT NULL),
	CONSTRAINT SYS_C008031 CHECK ("TAX_TRANS_NO" IS NOT NULL),
	CONSTRAINT SYS_C008032 CHECK ("AMOUNT" IS NOT NULL),
	CONSTRAINT SYS_C008033 CHECK ("ENTER_DATE" IS NOT NULL),
	CONSTRAINT SYS_C008034 CHECK ("ENTER_TIME" IS NOT NULL),
	CONSTRAINT SYS_C008035 CHECK ("ARREARS_FLAG" IS NOT NULL),
	CONSTRAINT SYS_C008036 CHECK ("APPEAL_DEPOSIT_FL" IS NOT NULL),
	CONSTRAINT TAX_STRANS_PK PRIMARY KEY (TAX_SUB_TRANS_NO)
);
CREATE INDEX TAX_STRANS_ASSESS_FK_I ON TAX_SUB_TRANS (ASSESS_NO);
CREATE INDEX TAX_STRANS_CH_TYPE_FK_I ON TAX_SUB_TRANS (CHARGE_TYPE_NO);
CREATE INDEX TAX_STRANS_CRD_SRC_TY_FK_I ON TAX_SUB_TRANS (CREDIT_SOURCE_TYPE_NO);
CREATE INDEX TAX_STRANS_ESTAB_FK_I ON TAX_SUB_TRANS (ESTAB_NO);
CREATE INDEX TAX_STRANS_INSTAS_FK_I ON TAX_SUB_TRANS (INST_ASSESS_NO);
CREATE INDEX TAX_STRANS_INT_FK_I ON TAX_SUB_TRANS (INT_NO);
CREATE INDEX TAX_STRANS_JOB_FK_I ON TAX_SUB_TRANS (JOB_NO);
CREATE INDEX TAX_STRANS_LICENCE_FK_I ON TAX_SUB_TRANS (LICENSE_NO);
CREATE INDEX TAX_STRANS_LIC_BASE_FK_I ON TAX_SUB_TRANS (LIC_BASE_NO);
CREATE INDEX TAX_STRANS_PEN_FK_I ON TAX_SUB_TRANS (PEN_NO);
CREATE UNIQUE INDEX TAX_STRANS_PK ON TAX_SUB_TRANS (TAX_SUB_TRANS_NO);
CREATE INDEX TAX_STRANS_TAXAC_FK_I ON TAX_SUB_TRANS (TAX_ACCOUNT_NO);
CREATE INDEX TAX_STRANS_TAXTR_COM_FK_I ON TAX_SUB_TRANS (TAXTR_COM_NO);
CREATE INDEX TAX_STRANS_TAXTR_TYPE_FK_I ON TAX_SUB_TRANS (TAX_TRANS_TYPE_NO);
CREATE INDEX TAX_STRANS_TAX_CENTRE_FK_I ON TAX_SUB_TRANS (TAX_CENTRE_NO);
CREATE INDEX TAX_STRANS_TAX_TRANS_FK_I ON TAX_SUB_TRANS (TAX_TRANS_NO);
CREATE INDEX TAX_STRANS_TAX_TYP_FK_I ON TAX_SUB_TRANS (TAX_TYPE_NO);
CREATE INDEX TAX_STRANS_TX_PERIOD_FK_I ON TAX_SUB_TRANS (TAX_PERIOD_NO);
CREATE INDEX TAX_SUB_AUTH_NO ON TAX_SUB_TRANS (TAX_AUTH_NO);
CREATE INDEX TAX_SUB_COMMON ON TAX_SUB_TRANS (COMMON_REVENUE);


-- ASSESSMENT foreign keys

ALTER TABLE ASSESSMENT ADD CONSTRAINT ASSESS_ASSESS_FK FOREIGN KEY (ASSESS_NEW_ASSESS_NO) REFERENCES ASSESSMENT(ASSESS_NO);
ALTER TABLE ASSESSMENT ADD CONSTRAINT ASSESS_TX_PERIOD_FK FOREIGN KEY (TAX_PERIOD_NO) REFERENCES TAX_PERIOD(TAX_PERIOD_NO);
ALTER TABLE ASSESSMENT ADD CONSTRAINT ASS_SUP_DOC_FK FOREIGN KEY (SUPPORT_DOC_NO) REFERENCES DOCUMENT(DOC_NO);


-- DOCUMENT foreign keys

ALTER TABLE DOCUMENT ADD CONSTRAINT DCMT_ASSESS_FK FOREIGN KEY (ASSESS_NO) REFERENCES ASSESSMENT(ASSESS_NO);
ALTER TABLE DOCUMENT ADD CONSTRAINT DCMT_DOC_TYP_FK FOREIGN KEY (DOC_TYPE_NO) REFERENCES DOC_TYPE(DOC_TYPE_NO);
ALTER TABLE DOCUMENT ADD CONSTRAINT DCMT_INT_RATE_FK FOREIGN KEY (INSTALL_RATE_NO) REFERENCES INSTALL_RATE(INSTALL_RATE_NO);
ALTER TABLE DOCUMENT ADD CONSTRAINT DCMT_TAX_P_FK FOREIGN KEY (TAX_PAYER_NO) REFERENCES TAX_PAYER(TAX_PAYER_NO);
ALTER TABLE DOCUMENT ADD CONSTRAINT DCMT_TX_PERIOD_FK FOREIGN KEY (TAX_PERIOD_NO) REFERENCES TAX_PERIOD(TAX_PERIOD_NO);
ALTER TABLE DOCUMENT ADD CONSTRAINT DOC_DELIV_BY_EMP FOREIGN KEY (DELIVERED_BY_IRD_EMP_NO) REFERENCES IRD_EMPLOYEE(IRD_EMPLOYEE_NO);
ALTER TABLE DOCUMENT ADD CONSTRAINT DOC_DIST_TO_EMP FOREIGN KEY (DISTRIBUTED_TO_IRD_EMP_NO) REFERENCES IRD_EMPLOYEE(IRD_EMPLOYEE_NO);
ALTER TABLE DOCUMENT ADD CONSTRAINT DOC_LOST_BY_EMP_FK FOREIGN KEY (LOST_BY_IRD_EMP_NO) REFERENCES IRD_EMPLOYEE(IRD_EMPLOYEE_NO);


-- DOC_AMOUNT foreign keys

ALTER TABLE DOC_AMOUNT ADD CONSTRAINT DOC_AMT_DOC_NO FOREIGN KEY (DOC_NO) REFERENCES DOCUMENT(DOC_NO);


-- TAXA_INACTIVE_PERIOD foreign keys

ALTER TABLE TAXA_INACTIVE_PERIOD ADD CONSTRAINT TAXA_TIP_DCMT_FK FOREIGN KEY (APPROV_DOC_NO) REFERENCES DOCUMENT(DOC_NO);


-- TAX_SUB_TRANS foreign keys

ALTER TABLE TAX_SUB_TRANS ADD CONSTRAINT TAX_STRANS_ASSESS_FK FOREIGN KEY (ASSESS_NO) REFERENCES ASSESSMENT(ASSESS_NO);
ALTER TABLE TAX_SUB_TRANS ADD CONSTRAINT TAX_STRANS_TAXAC_FK FOREIGN KEY (TAX_ACCOUNT_NO) REFERENCES TAX_ACCOUNT(TAX_ACCOUNT_NO);
ALTER TABLE TAX_SUB_TRANS ADD CONSTRAINT TAX_STRANS_TAX_TRANS_FK FOREIGN KEY (TAX_TRANS_NO) REFERENCES TAX_TRANSACTION(TAX_TRANS_NO);
ALTER TABLE TAX_SUB_TRANS ADD CONSTRAINT TAX_STRANS_TAX_TYP_FK FOREIGN KEY (TAX_TYPE_NO) REFERENCES TAX_TYPE(TAX_TYPE_NO);
ALTER TABLE TAX_SUB_TRANS ADD CONSTRAINT TAX_STRANS_TX_PERIOD_FK FOREIGN KEY (TAX_PERIOD_NO) REFERENCES TAX_PERIOD(TAX_PERIOD_NO);